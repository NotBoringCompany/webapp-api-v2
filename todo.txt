- add claimingCheck middleware for `claimxRES`.
- add canDeposit middleware for `depositRES`.
- talk to alvin to change `ethAddress` to `evmAddress`. once done, change all `ethAddress` fields to `evmAddress` in this codebase.
- add currency and tier logic + `addUserData` etc from accountLogic.js
- web app tier logic accepts an ethereum address only for now. if we go with solana etc, we need to accept these addresses as well. probably should add another field in the class in Moralis.
- talk with jason for the game mechanics since the logic for nbmon and minting will need to be different if there are any blockchain or even game related data.
- create non hard-coded requirements for the tiers (e.g. rn tier requirements are hardcoded)
- for now, `InGameData` is changed to `RealmHunterData` since other games will have other in game data tier requirements. remember to change this when we create more games!
- Change hatching duration in `publicMint` for proper production.
- remove console.logs (later on)
- remove require dotenv and moralis imports from all fiels apart from server.js
- add more nfts in `getNftsOwned` when more nfts are implemented. rn it's only for nbmons.
- test if `checkHatchingSignatureValid` works with the decoder after some variables are changed.
- convert `generalConfig` and `config` to be dynamic and support a `contract` parameter instead of making it in multiple files (meaning that it's not only bound for genesis nbmon contracts).
- Later on: once more activities apart from genesisMinting and hatching are available, change `addToActivities` to include them.
- check if each address can mint 5 NBMons or more. If more or less than 5, change `config` to include the new rule.
- check if each whitelisted address can mint more than 1 NBMon. if yes, change `canMintWhitelisted` to include the new rule.
- if a user wants to transfer ownership of an nft, we need the frontend to call `safeTransferFrom` before calling `changeOwnership`.
- later on: since our code only supports evm chains, we need to include non-evm chains later on.
- Use scheduler to call `resetMonthlyTradingVolume`.
- change the `mintToAdmin` to treasury later on since we're gonna have a treasury contract.
- Since NBMons and NFTs can be sold in OpenSea, we need to notify the user if they buy/sell in the web app or somewhere that they have to go to the inventory and update their NFT inventory manually.
Alternatively, whenever they log in to the game, it should also call the Web App API and call this function. Or we can also use a scheduler to call this function every X minutes.

- IMPORTANT: if we go with solana or any non evm chain, REMEMBER TO ACCEPT NON EVM ADDRESSES FOR QUERYING! (ALSO TELL THIS TO GAME DEV TO CHANGE PLAYFAB!!!!)
- IMPORTANT: change ALL genesis testing contract instances (e.g. process.env.GENESIS_NBMON_TESTING_ADDRESS) to genesis actual contract later on for the genesis contract declaration like in new ethers.Contract
and in `getGenesisNBMonOwner` where querying in Moralis is needed, also on other files.
- IMPORTANT: change the `salesFee` in `MarketplaceCore.sol (blockchain folder)` to depend on the web app tier instead of being fixed. NOTE: take into account the hunter association card as well.
- IMPORTANT: Gaming Backend Repo needs to be changed with the changes in the new moralis db.
- IMPORTANT: security implementation for `uploadGenesisEggMetadata` as now anyone can just call and upload it.
- IMPORTANT: security implementation for ALL new moralis classes in new DB. they are still publicly open for read and write.
- IMPORTANT: security implementation for `ItemsOnSale` class + `listItem` API.
- IMPORTANT: check with sean or just in general if we want to include nbmon specific data for `getItemsOnSale` just like on V1 API.
- IMPORTANT: Security implementation for all marketplace related functions (web app tier + in game tier specifically)


IMPORTANT CHANGES FROM V1 BACKEND:
1. publicMint (genesisNBMonMinting) now accepts `toAddress` instead of `address` for clarity.
2. getGenesisNBMonOwner now accepts `id` instead of `nbmonId`.
3. getOwnerGenesisNBMons is now `getOwnedGenesisNBMons`.
4. getOwnerGenesisNBMonIDs is now `getOwnedGenesisNBMonIDs`.
5. getGenesisNBMonTypes is now converted into `getNBMonData` to retrieve not just the types of an NBMon but ALL data (and not just Genesis NBMons). It also accepts `genus` instead of `genusParam`.
6. getGenesisBehavior is now also obtained from `getNBMonData`.
7. specialAttackEffort and specialDefenseEffort from is now spAtkEffort and spDefEffort. Both are also obtained from `nbmonGameData` class, not `Genesis_NBMons_GameData`
8. `uploadGenesisHatchedMetadata` now no longer checks from `Hatched_Metadata` class as the new server instance doesn't have the `Hatched_Metadata` class and may seem like a redundant step. It also
instantly just reuploads to the same URI instead of deleting the Object in the Bucket first before reuploading.
9. `genesisStatRandomizer.js` is now called `nbmonBlockchainStats.js` and this file will contain not just genesis NBMons.
10. `randomizeGenesisGender` is now `randomizeGender`.
11. `randomizeGenesisMutation` now accepts `genus` as a parameter instead of `genusParam`.
12. `randomizeGenesisPassives` is now `randomizePassives` UNTIL FURTHER NOTICE (ESPECIALLY IF WE WANT GENESIS NBMONS TO HAVE BETTER PASSIVES!!).
13. `randomizeGenesisPassives` also now returns an object showing two passives instead of an array.
14. `saveHatchingSignature` now has a `nftName` parameter for clarity on which nft it is, since it doesn't only save Genesis NBMons' signatures. 
15. `saveHatchingSignature` now returns an Object that shows an "OK" code if successful.
16. `saveHatchingSignature` now has a try and error block catch, instead of no error handling in the v1 backend.
16.1. `saveHatchingSIgnature` now accepts a ` blockchain` parameter to save the blockchain name + chain ID (object).
17. `addToActivities` now accepts `tx` object, `txType`, `blockchain`, `txValue`, `toAddress`, `timestamp`.
18. `updateHatchedNBMon` now accepts `nbmonId` instead of `id` as a parameter.
19. `userTransactionsActivities` class in Moralis is now `UserActivities`. Some fields inside the class are also renamed.
20. `value` is renamed to `txValue` in `UserActivities` class and is now a number type, not a string.
21. instead of only `nbmonId`, `UserActivities` class now accepts `tokenId`, `nftContractAddress` and `nftName` for further clarity and to accept ALL nfts.
22. `checkHatchingSignatureValid` now accepts `tx` object instead of `txHash`.
23. all of `activities.js` now no longer uses Moralis' TX classes to search for input/hashes. the tx object/hash will be passed on via the parent method.
24. `generalConfig` now returns `timestamps` instead of `timeStamps` (camel-case change).
25. `supplies` from `generalConfig` now returns { minted, supplyLimit } instead of { haveBeenMinted, supplyLimit }
26. `timestamps` now returns { now, publicOpen, whitelistOpen, mintingClosed, isPublicOpen, isWhitelistOpen, isMintingEnded } instead of { now, publicOpenAt, whitelistOpenAt, mintingCloseAt, isWhitelistOpen, isPublicOpen, isMintingEnded }
27. `hasMintedFive` in `config` now checks if amountMinted >= 5 instead of === 5, just in case somehow users are able to mint more than 5 nbmons.
28. `canMintUserWhitelisted` is now `canMintWhitelisted`.
29. `changeGenesisNBMonOwnership` is now `changeOwnership`. It also calls `safeTransferFrom` from the contract as well now.
30. `addMonthlyTradingVolume` now accepts `address` instead of `ethAddress` as a param.
31. `changeIsListedStatus` now accepts an `nftContract` parameter to accept all NFTs, not just Genesis NBMons. It also has `tokenId` instead of `id` as a parameter to be more clear.
32. `deleteItemOnSale` now accepts an `nftContract` parameter to accept all NFTs.
33. the query for `getListingData` now uses moment().unix() instead of Date.now(). This means that the `startingDate` and `endingDate` for `listItem` needs to use unix instead of Date.now().
34. `getListingData` now accepts `nftContract` as a parameter to accept all NFTs.
35. `getItemsOnSale` now will return ALL NFTs that are on sale. this means that we can't only return it specifically as an nbmon object just like the V1 API, so the return values will be default.
36. `getListingData` now returns error if the item is not found. before this, we only check if there is an item that is not expired using the `greaterThan` query.
37. `changeOwnerAndChangeListingStatus` is now shortened to `changeOwnerAndListingStatus`. It also now accepts an `nftContract` parameter.
38. `UserWebAppData` and `UserInGameData` in Moralis is now `WebAppData` and `RealmHunterData`.
39. `calculateUsdPrice` now has multiple price oracle options. NOTE: strict payment token naming procedure NEEDS TO TAKE PLACE! (BE AWARE OF THIS. this means that paymentTokenName must be following at least CoinGecko names.)
40. `getOwnerGenesisNBMonsAlt` is now `getOwnedGenesisNBMonsAlt`.
41. changed `network` in `UserActivities` to `blockchain`. this is because some networks like cronos testnet cannot be detected by Moralis, and the name is 'unknown'.
this is why it's better to save the blockchain object with its chain ID + name just in case one of them doesn't show.
42. IMPORTANT: paymentToken needs to follow CoinGecko's symbol syntax since we're using their API.
43. `updateGenesisNBmonsByAddress` is now implemented to ensure that any discrepancies between the blockchain and Moralis can be updated using this fn for genesis NBMons.
44. `addToActivities` now gets the tx directly as a parameter instead of having to query the `nftTransfers` class.
45. all web app tiers are now the under `webAppTiers` object
46. `sendEmail` now accepts `email` instead of `emailAddress`.
47. all functions in `tierSystem.js` accepts `address` instead of `ethAddress`.
48. all functions in `currencies.js` accepts `address` instead of `ethAddress`.