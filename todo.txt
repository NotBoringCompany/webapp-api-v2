- create checkHatchingSignatureValid and invalidateHatchingSignature
- create generalConfig and config functions for frontend.
- create `getListingData` and other marketplace functions for `getGenesisNBMon`.
- make the alt versions of the genesisNBMon functions for Playfab obtaining.
- Create addToActivities, import to genesisNBMonMinting API
- Create uploadGenesisEggMetadata, import to genesisNBMonMinting API
- declare uploadGenesisEggMetadata and addToActivities in `publicMint`
- Create an emergency check for GenesisNBMons class in Moralis (just in case some minted NBMons are not added so that it can manually be added to the Moralis DB).
- Change hatching duration in `publicMint` for proper production.
- remove console.logs (later on)
- remove require dotenv and moralis imports from all fiels apart from server.js
- test if `checkHatchingSignatureValid` works with the decoder after some variables are changed.

- IMPORTANT: change ALL genesis testing contract instances (e.g. process.env.GENESIS_NBMON_TESTING_ADDRESS) to genesis actual contract later on for the genesis contract declaration like in new ethers.Contract
and in `getGenesisNBMonOwner` etc where querying in Moralis is needed.
- IMPORTANT: Gaming Backend Repo needs to be changed with the changes in the new moralis db.
- IMPORTANT: security implementation for `uploadGenesisEggMetadata` as now anyone can just call and upload it.
- IMPORTANT: security implementation for ALL new moralis classes in new DB. they are still publicly open for read and write.


IMPORTANT CHANGES FROM V1 BACKEND:
1. publicMint (genesisNBMonMinting) now accepts `toAddress` instead of `address` for clarity.
2. getGenesisNBMonOwner now accepts `id` instead of `nbmonId`.
3. getOwnerGenesisNBMons is now `getOwnedGenesisNBMons`.
4. getOwnerGenesisNBMonIDs is now `getOwnedGenesisNBMonIDs`.
5. getGenesisNBMonTypes is now converted into `getNBMonData` to retrieve not just the types of an NBMon but ALL data (and not just Genesis NBMons). It also accepts `genus` instead of `genusParam`.
6. getGenesisBehavior is now also obtained from `getNBMonData`.
7. specialAttackEffort and specialDefenseEffort from is now spAtkEffort and spDefEffort. Both are also obtained from `nbmonGameData` class, not `Genesis_NBMons_GameData`
8. `uploadGenesisHatchedMetadata` now no longer checks from `Hatched_Metadata` class as the new server instance doesn't have the `Hatched_Metadata` class and may seem like a redundant step. It also
instantly just reuploads to the same URI instead of deleting the Object in the Bucket first before reuploading.
9. `genesisStatRandomizer.js` is now called `nbmonBlockchainStats.js` and this file will contain not just genesis NBMons.
10. `randomizeGenesisGender` is now `randomizeGender`.
11. `randomizeGenesisMutation` now accepts `genus` as a parameter instead of `genusParam`.
12. `randomizeGenesisPassives` is now `randomizePassives` UNTIL FURTHER NOTICE (ESPECIALLY IF WE WANT GENESIS NBMONS TO HAVE BETTER PASSIVES!!).
13. `randomizeGenesisPassives` also now returns an object showing two passives instead of an array.
14. `saveHatchingSignature` now has a `nftName` parameter for clarity on which nft it is, since it doesn't only save Genesis NBMons' signatures. 
15. `saveHatchingSignature` now returns an Object that shows an "OK" code if successful.
16. `saveHatchingSignature` now has a try and error block catch, instead of no error handling in the v1 backend.
17. `addToActivities` now accepts `txHash` and `txType` to shorten the parameters instead of `transactionHash` and `transactionType`.
18. `updateHatchedNBMon` now accepts `nbmonId` instead of `id` as a parameter.
19. `userTransactionsActivities` class in Moralis is now `UserActivities`. Some fields inside the class are also renamed.
20. `value` is renamed to `txValue` in `UserActivities` class and is now a number type, not a string.
21. instead of only `nbmonId`, `UserActivities` class now accepts `tokenId`, `nftContractAddress` and `nftName` for further clarity and to accept ALL nfts.
22. `checkHatchingSignatureValid` now accepts `txHash` instead of `hash` as a parameter.
23. `checkhatchignSignatureValid` now has a new parameter, `network`, to check for the network that the activity was conducted in.